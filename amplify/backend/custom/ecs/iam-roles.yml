AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM roles and policies for Little Bit ECS audio processing service'

Parameters:
  env:
    Type: String
    Description: Environment name (dev, staging, prod)
  S3BucketName:
    Type: String
    Description: S3 bucket name for audio files
  AppSyncApiId:
    Type: String
    Description: AppSync API ID for GraphQL operations

Resources:
  # ECS Task Execution Role (for ECS agent to pull images, write logs)
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'LittleBitECSTaskExecutionRole-${env}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: ECRAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/little-bit/audio-processing-${env}'
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: 
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/little-bit-audio-processing-${env}*'
      Tags:
        - Key: Name
          Value: !Sub 'LittleBitECSTaskExecutionRole-${env}'
        - Key: Environment
          Value: !Ref env
        - Key: Project
          Value: little-bit

  # ECS Task Role (for application code to access AWS services)
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'LittleBitECSTaskRole-${env}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3AudioProcessingPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub 'arn:aws:s3:::${S3BucketName}/public/unprocessed/*'
                  - !Sub 'arn:aws:s3:::${S3BucketName}/public/processed/*'
                  - !Sub 'arn:aws:s3:::${S3BucketName}/debug/*'
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetBucketLocation
                Resource: !Sub 'arn:aws:s3:::${S3BucketName}'
        - PolicyName: AppSyncGraphQLPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - appsync:GraphQL
                Resource: 
                  - !Sub 'arn:aws:appsync:${AWS::Region}:${AWS::AccountId}:apis/${AppSyncApiId}/*'
        - PolicyName: CloudWatchMetricsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: '*'
                Condition:
                  StringEquals:
                    'cloudwatch:namespace': 'LittleBit/AudioProcessing'
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: 
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/little-bit-audio-processing-${env}*'
      Tags:
        - Key: Name
          Value: !Sub 'LittleBitECSTaskRole-${env}'
        - Key: Environment
          Value: !Ref env
        - Key: Project
          Value: little-bit

  # Lambda Role for triggering ECS tasks (update to existing CreateSampleRecord role)
  LambdaECSInvocationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'LittleBitLambdaECSRole-${env}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ECSTaskInvocationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                  - ecs:DescribeTasks
                  - ecs:DescribeTaskDefinition
                Resource:
                  - !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/little-bit-audio-processing-${env}'
                  - !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task-definition/little-bit-audio-processing-${env}*'
                  - !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task/*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt ECSTaskExecutionRole.Arn
                  - !GetAtt ECSTaskRole.Arn
        - PolicyName: ECSNetworkingPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub 'LittleBitLambdaECSRole-${env}'
        - Key: Environment
          Value: !Ref env
        - Key: Project
          Value: little-bit

Outputs:
  ECSTaskExecutionRoleArn:
    Description: ARN of the ECS task execution role
    Value: !GetAtt ECSTaskExecutionRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ECSTaskExecutionRoleArn'

  ECSTaskRoleArn:
    Description: ARN of the ECS task role
    Value: !GetAtt ECSTaskRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ECSTaskRoleArn'

  LambdaECSInvocationRoleArn:
    Description: ARN of the Lambda role for ECS invocation
    Value: !GetAtt LambdaECSInvocationRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-LambdaECSInvocationRoleArn'

  ECSTaskExecutionRoleName:
    Description: Name of the ECS task execution role
    Value: !Ref ECSTaskExecutionRole
    Export:
      Name: !Sub '${AWS::StackName}-ECSTaskExecutionRoleName'

  ECSTaskRoleName:
    Description: Name of the ECS task role
    Value: !Ref ECSTaskRole
    Export:
      Name: !Sub '${AWS::StackName}-ECSTaskRoleName'